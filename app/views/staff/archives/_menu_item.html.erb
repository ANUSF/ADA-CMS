<li id="menu-options-<%= menu_item.id %>"> 
  
  <% if menu_item.content.is_a? Page %>
    <%= image_tag('icons/page.png', :title => "drop n drag the page to change its menu position") %>
    <span><%= menu_item.title %></span>  
    
    <span id="content-controls">
      <%= link_to 'Public View', menu_item.link %>, 
      <%= link_to 'Edit', edit_staff_archive_page_path(menu_item.archive, menu_item.content) %>,  
      <%= link_to 'Delete', staff_archive_page_path(menu_item.archive, menu_item.content), :method => :delete, :confirm => "Are you sure?" %> 
    </span>

  <% else %>
    <%= image_tag('icons/link.png', :title => "drop n drag the link to change its menu position") %>
    <span><%= menu_item.title %></span> 

    <span id="content-controls">
      <%= link_to "Visit", menu_item.link, :target => "_blank" %>, 
      <%= link_to 'Edit', edit_staff_archive_menu_item_path(menu_item.archive, menu_item) %>,  
      <%= link_to 'Delete', staff_archive_menu_item_path(menu_item.archive, menu_item), :method => :delete, :confirm => "Are you sure?" %>
    <span id="page-controls">
  <% end %>

    <% if menu_item.children.any? %>
      <ul class="sortable">
        <% 
          #the workaround below is due to nested_set updating the order of siblings from the point of view of siblings
          #but not from the parent. This, the order of children in parent.children is not updated.
        first_child = menu_item.children.first %>
	      <%= render(:partial => "menu_item", :collection => first_child.self_and_siblings) %> 
      </ul>
    <% end %>
</li>